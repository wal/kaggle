{
    "collab_server" : "",
    "contents" : "# https://www.kaggle.com/c/titanic\n# http://trevorstephens.com/kaggle-titanic-tutorial/getting-started-with-r/\n\nlibrary(tidyverse)\n\ntrain <- read.csv('data/train.csv')\ntest <- read.csv('data/test.csv')\n\nstr(train)\ntable(train$Survived)\nround(prop.table(table(train$Survived)) * 100, 0)\n\n# Submission 1 - Everyone Dies\n\nsubmit <- test %>%\n  mutate(Survived = 0) %>%\n  select(PassengerId, Survived)\n\n\ntable(submit$Survived)\n\nwrite.csv(submit, 'results/submit_1-everyone_dies.csv', row.names = FALSE)\n\n\n# Submission 2 - Impact of Sex on survival\n\nsummary(train$Sex)\nprop.table(table(train$Sex, train$Survived)) * 100\nprop.table(table(train$Sex, train$Survived), 1) * 100\nprop.table(table(train$Sex, train$Survived), 2) * 100\n\n\nsubmit <- test %>%\n  mutate(Survived = ifelse(Sex == 'male', 0, 1))\n\nwrite.csv(\n  submit %>% select(PassengerId, Survived),\n  'results/submit_2-men_die.csv',\n  row.names = FALSE\n)\n\n\n# Submission 3 - Impact of Age on survival\nsummary(train$Age)\ntrain$Child <- train$Age < 18\nstr(train)\naggregate(data = train, Survived ~ Child + Sex, FUN = sum)\naggregate(\n  data = train,\n  Survived ~ Child + Sex,\n  FUN = function(x) {\n    mean(x)\n  }\n)\n\n\n# Submission #4 - Impact of Fare and pClass\n\nsummary(train$Fare)\nfare_category <- function(fare) {\n  if (fare > 30) {\n    return('30+')\n  } else if (fare > 20) {\n    return('20-30')\n  } else if (fare > 10) {\n    return('10-20')\n  } else {\n    return('<10')\n  }\n}\n\ntrain <- train %>%\n  rowwise() %>%\n  mutate(Fare2 = fare_category(Fare))\n\ntrain$Fare2 <- as.factor(train$Fare2)\n\nsummary(train$Fare2)\nsummary(train$Pclass)\n\naggregate(Survived ~ Fare2 + Pclass + Sex, data = train, FUN = mean)\n\nsurvived <- function(sex, pclass, fare) {\n  if (sex == 'female') {\n    if (pclass == 3 && fare >= 20) {\n      return(1)\n    } else {\n      return(0)\n    }\n  } else {\n    return(0)\n  }\n}\n\nsubmit <- test %>%\n  rowwise() %>%\n  mutate(Survived = survived(Sex, Pclass, Fare))\n\n\nwrite.csv(\n  submit %>% select(PassengerId, Survived),\n  'results/submit_3-sex-fare-class.csv',\n  row.names = FALSE\n)\n\n# Submission 4 - Decision Tree\n# A glass-box model, after the model has found the patterns in the data you can see exactly what\n# decisions will be made for unseen data that you want to predict\n\nround(prop.table(table(train$Survived)) * 100, 0)\n\nlibrary(rpart)\nfit <-\n  rpart(\n    Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,\n    data = train,\n    method = 'class'\n  )\n\nlibrary(rattle)\nlibrary(rpart.plot)\nlibrary(RColorBrewer)\n\nfancyRpartPlot(fit)\nPrediction <- predict(fit, test, type = \"class\")\n\nsubmit <-\n  data.frame(PassengerId = test$PassengerId, Survived = Prediction)\n\nwrite.csv(\n  submit %>% select(PassengerId, Survived),\n  'results/submit_4-decision_tree.csv',\n  row.names = FALSE\n)\n\n# Feature Engineering - chopping, and combining different attributes\ntrain <- read.csv('data/train.csv')\ntest <- read.csv('data/test.csv')\n\ntest$Survived <- NA\ncombined <- rbind(train, test)\ncombined$Name <- as.character(combined$Name)\ncombined$Name[1]\n\n\n# Refactor with stringr/tidyr\ncombined$Title <- sapply(combined$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})\ncombined$Title <- sub(' ', '', combined$Title)\n\ntable(combined$Title)\n\ncombined$Title[combined$Title %in% c('Mme', 'Mlle')] <- 'Mlle'\ncombined$Title[combined$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'\ncombined$Title[combined$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'\n\ncombined$Title <- factor(combined$Title)\n\ncombined$FamilySize <- combined$SibSp + combined$Parch + 1\ncombined$Surname <- sapply(combined$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})\ncombined$FamilyID <- paste(as.character(combined$FamilySize), combined$Surname, sep=\"\")\n\ncombined$FamilyID[combined$FamilySize <= 2] <- 'Small'\ntable(combined$FamilyID)\n\nfamIDs <- data.frame(table(combined$FamilyID))\nfamIDs <- famIDs[famIDs$Freq <= 2,]\n\ncombined$FamilyID[combined$FamilyID %in% famIDs$Var1] <- 'Small'\ncombined$FamilyID <- factor(combined$FamilyID)\n\ntrain <- combined[1:891,]\ntest <- combined[892:1309,]\n\nfit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,\n             data=train, \n             method=\"class\")\n\nfancyRpartPlot(fit)\n\nPrediction <- predict(fit, test, type = \"class\")\n\nsubmit <-\n  data.frame(PassengerId = test$PassengerId, Survived = Prediction)\n\nwrite.csv(\n  submit %>% select(PassengerId, Survived),\n  'results/submit_5-decision_tree_feature_engineering.csv',\n  row.names = FALSE\n)\n\n\n\n# Submission 5 - Random Forests\n# Grow a lot of different models, and let their outcomes be averaged or voted across the group.\n\n# Bagging \nsample(1:10, replace = TRUE)\nsample(1:10, replace = FALSE)\n\n\nsummary(combined$Age)\n\nAgefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,\n                data=combined[!is.na(combined$Age),], \n                method=\"anova\")\ncombined$Age[is.na(combined$Age)] <- predict(Agefit, combined[is.na(combined$Age),])\n\n\nsummary(combined)\n\nwhich(combined$Embarked == '')\ncombined$Embarked[c(62,830)] = \"S\"\ncombined$Embarked <- factor(combined$Embarked)\nwhich(is.na(combined$Fare))\ncombined$Fare[1044] <- median(combined$Fare, na.rm=TRUE)\n\nstr(combined)\n\n\ncombined$FamilyID2 <- combined$FamilyID\ncombined$FamilyID2 <- as.character(combined$FamilyID2)\ncombined$FamilyID2[combined$FamilySize <= 3] <- 'Small'\ncombined$FamilyID2 <- factor(combined$FamilyID2)\n\nsummary(combined)\n\nlibrary(randomForest)\nset.seed(415)\n\n\ntrain <- combined[1:891,]\ntest <- combined[892:1309,]\n\n\nfit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +\n                      Embarked + Title + FamilySize + FamilyID2,\n                    data=train, \n                    importance=TRUE, \n                    ntree=2000)\nvarImpPlot(fit)\n\nPrediction <- predict(fit, test)\nsubmit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)\nwrite.csv(\n  submit %>% select(PassengerId, Survived),\n  'results/submit_6-random_forest.csv',\n  row.names = FALSE\n)\n\n\n# Submission 6 - Conditional Inference Trees\n\nlibrary(party)\n\nset.seed(415)\nfit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +\n                   Embarked + Title + FamilySize + FamilyID,\n                 data = train, \n                 controls=cforest_unbiased(ntree=2000, mtry=3))\n\n\nPrediction <- predict(fit, test, OOB=TRUE, type = \"response\")\nsubmit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)\nwrite.csv(\n  submit %>% select(PassengerId, Survived),\n  'results/submit_7-conditional_inference_tree.csv',\n  row.names = FALSE\n)",
    "created" : 1507913276002.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "593305743",
    "id" : "72B79C3B",
    "lastKnownWriteTime" : 1507983207,
    "last_content_update" : 1507983207533,
    "path" : "~/projects/wal/kaggle/titanic/R/titanic.R",
    "project_path" : "R/titanic.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}